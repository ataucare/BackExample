// <auto-generated />
using System;
using Api.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api.Infrastructure.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20220810030651_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Api.Core.Entities.Locacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locacion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 8, 9, 23, 6, 51, 7, DateTimeKind.Local).AddTicks(7957),
                            Deleted = false,
                            Direccion = "Direccion Servicio 1, Región Metropolitana",
                            Nombre = "Servicio 1"
                        });
                });

            modelBuilder.Entity("Api.Core.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Creacion = new DateTime(2022, 8, 9, 23, 6, 51, 7, DateTimeKind.Local).AddTicks(8285),
                            CreatedDate = new DateTime(2022, 8, 9, 23, 6, 51, 7, DateTimeKind.Local).AddTicks(8278),
                            Deleted = false,
                            Icon = "mdi-home",
                            Nombre = "Inicio",
                            Orden = 0,
                            Url = "/"
                        },
                        new
                        {
                            Id = 2,
                            Creacion = new DateTime(2022, 8, 9, 23, 6, 51, 7, DateTimeKind.Local).AddTicks(8298),
                            CreatedDate = new DateTime(2022, 8, 9, 23, 6, 51, 7, DateTimeKind.Local).AddTicks(8295),
                            Deleted = false,
                            Icon = "mdi-account-group-outline",
                            Nombre = "Usuarios",
                            Orden = 1
                        });
                });

            modelBuilder.Entity("Api.Core.Entities.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("MenuId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Creacion = new DateTime(2022, 8, 9, 23, 6, 51, 7, DateTimeKind.Local).AddTicks(8561),
                            CreatedDate = new DateTime(2022, 8, 9, 23, 6, 51, 7, DateTimeKind.Local).AddTicks(8555),
                            Deleted = false,
                            MenuId = 2,
                            Nombre = "Listar",
                            Orden = 2,
                            Url = "/lista"
                        });
                });

            modelBuilder.Entity("Api.Core.Entities.MenuRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<int>("MenuId")
                        .HasColumnType("integer");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RolId");

                    b.ToTable("MenuRol");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 8, 9, 23, 6, 51, 7, DateTimeKind.Local).AddTicks(8701),
                            Deleted = false,
                            Enabled = true,
                            MenuId = 1,
                            RolId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 8, 9, 23, 6, 51, 7, DateTimeKind.Local).AddTicks(8707),
                            Deleted = false,
                            Enabled = true,
                            MenuId = 2,
                            RolId = 1
                        });
                });

            modelBuilder.Entity("Api.Core.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Rol");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 8, 9, 23, 6, 51, 7, DateTimeKind.Local).AddTicks(8867),
                            Deleted = false,
                            Nombre = "Administrador"
                        });
                });

            modelBuilder.Entity("Api.Core.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Anexo")
                        .HasColumnType("integer");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LocacionId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocacionId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Taucare",
                            CreatedDate = new DateTime(2022, 8, 9, 23, 6, 51, 7, DateTimeKind.Local).AddTicks(9049),
                            Deleted = false,
                            Email = "ataucare@newtenberg.com",
                            LocacionId = 1,
                            Nombre = "Alvaro",
                            Password = "YpJX//2e21/6kNyNBQj6dTgQ8/KIlcFrq1sC0CqVfCJ++CksgYLsTjlhVXwFwtq0yqg8X4Az+yissGtCYn4mt76gZCUuhpjtEGlF644zCZOvfrjfdmEnDKpbcYAxSxiMh5kE7rso7vdCLxJUXGHzGlD2v8/dNI+Zu8AZNoIVNf0=",
                            RolId = 1,
                            Rut = "15979991-3",
                            Username = "ataucare"
                        });
                });

            modelBuilder.Entity("Api.Core.Entities.MenuItem", b =>
                {
                    b.HasOne("Api.Core.Entities.Menu", "Menu")
                        .WithMany("MenuItem")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Api.Core.Entities.MenuRol", b =>
                {
                    b.HasOne("Api.Core.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Core.Entities.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Api.Core.Entities.Usuario", b =>
                {
                    b.HasOne("Api.Core.Entities.Locacion", "Locacion")
                        .WithMany()
                        .HasForeignKey("LocacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Core.Entities.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locacion");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Api.Core.Entities.Menu", b =>
                {
                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("Api.Core.Entities.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
